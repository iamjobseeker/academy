
	package component; 

	import java.awt.BorderLayout;
	import java.awt.Color;
	import java.awt.Dimension;
	import java.awt.Graphics;
	import java.awt.event.ActionEvent;
	import java.awt.event.ActionListener;
	import java.awt.event.FocusAdapter;
	import java.awt.event.FocusEvent;
	import java.awt.event.FocusListener;
	import java.awt.event.ItemEvent;
	import java.awt.event.ItemListener;
	import java.awt.event.KeyAdapter;
	import java.awt.event.KeyEvent;
	import java.awt.event.MouseAdapter;
	import java.awt.event.MouseEvent;

	import javax.swing.Icon;
	import javax.swing.ImageIcon;
	import javax.swing.JButton;
	import javax.swing.JCheckBox;
	import javax.swing.JComboBox;
	import javax.swing.JComponent;
	import javax.swing.JFrame;
	import javax.swing.JList;
	import javax.swing.JPanel;
	import javax.swing.JPasswordField;
	import javax.swing.JRadioButton;
	import javax.swing.JTextArea;
	import javax.swing.JTextField;

	public class ComponentQuiz extends JFrame {

		public ComponentQuiz() { // 생성자 시작 
			setBounds(1000, 500, 248, 271);
			setDefaultCloseOperation(EXIT_ON_CLOSE);
			getContentPane().setLayout(null);

			/* Class KeyAdapter 

	 An abstract adapter class for receiving keyboard events. 
	 The methods in this class are empty. 
	 This class exists as convenience for creating listener objects. 

	Extend this class to create a KeyEvent listener 
	and override the methods for the events of interest. 

	(If you implement the KeyListener interface, you have to define all of the methods in it. 
	This abstract class defines null methods for them all, 
	so you can only have to define methods for events you care about.) 

	Create a listener object using the extended class and 
	then register it with a component using the component's addKeyListener method. 
	When a key is pressed, released, or typed, 
	the relevant method in the listener object is invoked, and the KeyEvent is passed to it.
			 */

			/* Class KeyEvent 

	An event which indicates that a keystroke occurred in a component. 

	This low-level event is generated by a component object (such as a text field) 
	when a key is pressed, released, or typed. 

	The event is passed to every KeyListener or KeyAdapter object 
	which registered to receive such events using the component's addKeyListener method. 
	(KeyAdapter objects implement the KeyListener interface.) 
	Each such listener object gets this KeyEvent when the event occurs. 
			 */

			addKeyListener(new KeyAdapter() { 

				@Override
				public void keyPressed(KeyEvent e) {
					switch (e.getKeyCode()) { // getKeyCode: Returns the integer keyCode associated with the key in this event.

					case KeyEvent.VK_0: System.out.println("0 눌림"); break;

					case KeyEvent.VK_1: jTextAreaEx(); break;

					case KeyEvent.VK_2: jTextfieldEx(); break;

					case KeyEvent.VK_3: jPasswordFieldEx(); break;

					case KeyEvent.VK_4: jButtonEx(); break; 

					case KeyEvent.VK_5: jCheckBoxEx(); break;

					case KeyEvent.VK_6: jRadioButtonEx(); break; 

					case KeyEvent.VK_7: jListEx(); break; 

					case KeyEvent.VK_8: jComboBoxEx(); break; 
					} 

				}
			}); 

			setVisible(true); 

		} // 생성자 끝

		private void jTextAreaEx() { // 1번
			JTextArea txtArea = new JTextArea(); 
			txtArea.setColumns(40); // 너비 
			txtArea.setRows(5); // 높이

			txtArea.setLineWrap(true); // 자동개행 

			txtArea.setEditable(true); // 수정여부

			txtArea.setText("안녕하세요");

			String str = txtArea.getText(); // area의 텍스트를 가져옴 
			System.out.println(str); 

			newJFrame(txtArea); // 밍? 
		}

		private void newJFrame(JComponent c) { // JComponent는 JTextArea의 부모클래스
			JFrame frame = new JFrame("컴포넌트 테스트");
			frame.setBounds(1000, 300, 500, 500);
			frame.setDefaultCloseOperation(DISPOSE_ON_CLOSE); 

			// 이미지파일 객체 
			ImageIcon img = new ImageIcon("./src/component/mi.jpg");
			JPanel pane1 = new JPanel() {
				@Override
				protected void paintComponent(Graphics g) {

					g.drawImage(img.getImage(), 0, 0, 
							getSize().width, getSize().height, null); // 판넬의 화면 크기 

					setOpaque(false); // 배경을 원래 색으로 칠함 

					super.paintComponent(g); 
				}
			};

			//		JPanel pane = new JPanel();
			//		pane.add(c); 
			//		frame.getContentPane().add(pane); 

			pane1.add(c);
			frame.getContentPane().add(pane1);

			frame.setVisible(true); 
		}

		private void jTextfieldEx() { // 2번
			JTextField txt = new JTextField();
			txt.setColumns(10); // 너비 

			// --- Placeholder --- 
			txt.setText("ID를 입력하세요");
			txt.setForeground(Color.GRAY); 

			txt.addFocusListener(new FocusListener() {

				@Override
				public void focusLost(FocusEvent e) {
					// JTextField에서 포커스를 잃으면 Placeholder
					if(txt.getText().isEmpty()) {
						txt.setText("ID를 입력하세요");
						txt.setForeground(Color.gray);
					}
				}

				@Override
				public void focusGained(FocusEvent e) { 
					// JTextField에 포커스가 넘어가면 Text 지우기
					if(txt.getText().equals("ID를 입력하세요")) {
						txt.setText("");
						txt.setForeground(Color.BLACK); 
					}
				}
			});

			//
			JPanel pane = new JPanel();
			pane.add(txt);

			JButton btn = new JButton("로그인"); 
			pane.add(btn); 

			newJFrame(pane);

			// 화면을 띄우는 newJFrame() 메소드 이후 호출해야 함
			btn.requestFocus(); // 버튼이 포커스 획득 
			//
		}

		private void jPasswordFieldEx() { // 3번 
			JPasswordField pass = new JPasswordField("TEST", 20);

			//		System.out.println(pass.getText()); deprecated
			System.out.println(pass.getPassword()); 

			newJFrame(pass); 
		}

		private void jButtonEx() { // 4번 
			JButton btn = new JButton("버튼"); 

			btn.setToolTipText("전송합니다"); // 마우스를 올릴때 생성 텍스트 

			btn.addActionListener(new ActionListener() {

				@Override
				public void actionPerformed(ActionEvent e) { 
					System.out.println("Button Clicked!!!");
				}
			});

			btn.setPreferredSize(new Dimension(300, 400));

			btn.doClick();
			btn.doClick();
			btn.doClick();
			btn.doClick();
			btn.doClick(); 

			newJFrame(btn);
		}

		private void jCheckBoxEx() { // 5번
			// 체크박스 만들기 
			JCheckBox check1 = new JCheckBox("아이스 아메리카노");
			JCheckBox check2 = new JCheckBox("수박주스");
			JCheckBox check3 = new JCheckBox("아이스 초코");

			// 선택 출력창 만들기 
			JTextField text = new JTextField();
			text.setColumns(10);

			// 레이아웃 // 잘 안됨
			setLayout(new BorderLayout()); 
			add(check1, "East");
			add(check2, "West");
			add(check3, "South"); 
			add(text, "Center");

			// 콘솔에 출력
			check1.addActionListener(new ActionListener() {
				@Override
				public void actionPerformed(ActionEvent e) {
					System.out.println(check1.getText());				
				}
			}); 

			check2.addActionListener(new ActionListener() {
				@Override
				public void actionPerformed(ActionEvent e) {
					System.out.println(check2.getText());				
				}
			}); 

			check3.addActionListener(new ActionListener() {
				@Override
				public void actionPerformed(ActionEvent e) {
					System.out.println(check3.getText());
				}
			});

			//		@Override
			//		public void actionPerformed(ActionEvent e) {
			//			if(e.getSource()==check1) {
			//				System.out.println();
			//			}
			//		}

			//		check1.addActionListener(this);

			JPanel pane5 = new JPanel();

			pane5.add(check1); 
			pane5.add(check2);
			pane5.add(check3); 
			pane5.add(text); 

			newJFrame(pane5); // 생성메소드

			// 콘솔에 출력
			check1.addActionListener(new ActionListener() {
				@Override
				public void actionPerformed(ActionEvent e) {
					System.out.println(check1.getText());				
				}
			}); 

			check2.addActionListener(new ActionListener() {
				@Override
				public void actionPerformed(ActionEvent e) {
					System.out.println(check2.getText());				
				}
			}); 

			check3.addActionListener(new ActionListener() {
				@Override
				public void actionPerformed(ActionEvent e) {
					System.out.println(check3.getText());
				}
			});


		}

		private void jRadioButtonEx() { // 6번
			// 라디오버튼 만들기
			JRadioButton radio1 = new JRadioButton("아이스 아메리카노");
			JRadioButton radio2 = new JRadioButton("수박주스");
			JRadioButton radio3 = new JRadioButton("아이스초코");

			JPanel pane3 = new JPanel();

			pane3.add(radio1);
			pane3.add(radio2);
			pane3.add(radio3);

			newJFrame(pane3); // 생성메소드 

			// 콘솔에 출력
			radio1.addActionListener(new ActionListener() {
				@Override
				public void actionPerformed(ActionEvent e) {
					System.out.println(radio1.getText());				
				}
			}); 

			radio2.addActionListener(new ActionListener() {
				@Override
				public void actionPerformed(ActionEvent e) {
					System.out.println(radio2.getText());				
				}
			}); 

			radio3.addActionListener(new ActionListener() {
				@Override
				public void actionPerformed(ActionEvent e) {
					System.out.println(radio3.getText()); 
				}
			});
		}

		private void jListEx() { // 7번
			// 리스트 생성
			String[] ram = {"신라면", "진라면", "오징어짬뽕", "왕뚜껑"}; 
			JList mylist = new JList(ram);

			// 콘솔에 출력
			
			



			JPanel pane4 = new JPanel();
			pane4.add(mylist); 
			newJFrame(pane4);
		}

		private void jComboBoxEx() { // 8번
			// 콤보박스 생성
			String[] ram = {"신라면", "진라면", "오징어짬뽕", "왕뚜껑"};
			JComboBox combo = new JComboBox(ram);

			//	combo.setSelectedItem(combo);

			JPanel pane8 = new JPanel();
			pane8.add(combo);
			newJFrame(pane8); 
		}


		public static void main(String[] args) {
			new ComponentEx(); 
		}

	}


